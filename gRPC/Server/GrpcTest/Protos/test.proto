syntax = "proto3";

option csharp_namespace = "TestServer";

package test;

service TestService {

	//Hello
	rpc SayHello (HelloRequest) returns (HelloReply);

	//health
	rpc SendPlayerHealth (HealthPost) returns (EmptyMsg);
	rpc SubscribeToPlayersHealth (EmptyMsg) returns (stream HealthGet); //Clients get player health when server receive health update with SendPlayerHealth

	//Server get player position based on client tick-rate (same as server)
	//=> client-sided game. For a server-sided game, send client inputs (+ client prediction)
	rpc PlayerPosition (stream PositionPost) returns (stream PositionGet);

	rpc Ping (PingPost) returns (PingGet);
}

message EmptyMsg { }

//Hello
message HelloRequest{
	string msg = 1;
}

message HelloReply {
	string msg = 1;
}

//Health
message HealthPost {
	int32 playerIndex = 1;

	int32 health = 2;
}

message HealthGet {
	int32 playerIndex = 1;

	int32 health = 2;
}

//Used like a struct
message Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}

message PositionPost {
	int32 playerIndex = 1;
	Vector3 position = 2;
}

message PositionGet {
	repeated Vector3 positions = 1;
}

message PingPost {
	double time = 1;
}

message PingGet {
	double time = 1;
}