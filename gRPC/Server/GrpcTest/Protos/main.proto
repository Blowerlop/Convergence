syntax = "proto3";

import "google/protobuf/any.proto";
option csharp_namespace = "GRPCServer";

package main;

service MainService {
	//Establish first connection with client
	//Sync all NetworkBehaviour + SyncVars
	rpc GRPC_Handshake (GRPC_HandshakePost) returns (GRPC_HandshakeGet);

	rpc GRPC_NetcodeHandshake (GRPC_NHandshakePost) returns (GRPC_NHandshakeGet);

	//Ping stream checks regularly for client connections 
	//(Used to disconnect safely from game if no response)
	rpc GRPC_Ping (stream GRPC_PingPost) returns (stream GRPC_PingGet);
	

	//Srv prefix => comming from NetcodeServer

	rpc GRPC_SrvNetObjUpdate (stream GRPC_NetObjUpdate) returns (GRPC_EmptyMsg);

	//Cli prefix => comming from UnrealClients
	
	rpc GRPC_CliNetObjUpdate (GRPC_EmptyMsg) returns (stream GRPC_NetObjUpdate);

	rpc GRPC_SrvNetVarUpdate (stream GRPC_NetVarUpdate) returns (GRPC_EmptyMsg);

	rpc GRPC_CliNetNetVarUpdate (GRPC_NetVarUpdate) returns (stream GRPC_NetVarUpdate);
}

//Handshake
message GRPC_HandshakePost { }

message GRPC_HandshakeGet {
	int32 result = 1;
	int32 clientId = 2;

	repeated GRPC_NetObjUpdate netObjects = 3;
	repeated GRPC_NetVarUpdate netVars = 4;
}

message GRPC_NHandshakePost { /*Init data*/ }
message GRPC_NHandshakeGet { 
	int32 result = 1;
}

//Used by PingStream.
//Not using EmptyMsg => easier to send infos when pinging, if we want to
message GRPC_PingPost { 
	int32 clientId = 1;
}
message GRPC_PingGet { }

//NetworkObjects
message GRPC_NetObjUpdate {
	GRPC_NetObjUpdateType type = 1;
	int32 netId = 2;
	string prefabId = 3;
}

enum GRPC_NetObjUpdateType {
	NEW = 0;
	DESTROY = 1;
}

//Data structures

message GRPC_NetVarUpdate {
	int32 hashName = 1;
	GRPC_GenericValue newValue = 2;
}

//New value type
message GRPC_EmptyMsg {}

message GRPC_Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}

//Generics
message GRPC_GenericValue {
	GRPC_GenericType type = 1;
	string value = 2;
}

enum GRPC_GenericType {
	NULL = 0;	
	INT = 1;
	STRING = 2;
	BOOL = 3;
	VECTOR3 = 4;
}

message GRPC_ClientId
{
	uint32 id = 1;
}